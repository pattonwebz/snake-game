"use strict";function hashchanged(){var a=location.hash;console.log(a),""!==a&&$("ul.nav.navbar-nav li").each(function(){var b=$("a",this).attr("href");a===b&&!1===$(this).hasClass("active")?$(this).addClass("active"):$(this).removeClass("active")})}angular.module("snakeGameApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider","$locationProvider",function(a,b){b.hashPrefix(""),a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/contact",{templateUrl:"views/contact.html",controller:"ContactCtrl",controllerAs:"contact"}).otherwise({redirectTo:"/"})}]),$(document).ready(function(){$("#exampleModal").on("show.bs.modal",function(){var a=$(this);a.find(".modal-title").text("New User Info")}),$(window).on("hashchange",function(){hashchanged()}).trigger("hashchange")}),angular.module("snakeGameApp").controller("PlayerCtrl",["$scope","PlayerFactory",function(a,b){a.pos=b.getPos()}]).factory("PlayerFactory",function(){var a={},b={x:0,y:0},c=!1,d=0;return a.setPos=function(a){b=a},a.getPos=function(){return b},a.setPlayerMoved=function(a){c=a},a.hasPlayerMoved=function(){return c},a.setScore=function(a){d=a},a.getScore=function(){return d},a.addSegment=function(){},a}),angular.module("snakeGameApp").controller("BoardCtrl",["$scope","BoardFactory",function(a,b){a.board=b.getBoard(),a.handleClick=function(a){function c(){var b=a.target.dataset.state,c=b;return"false"===b?c=!0:"true"===b&&(c=!1),c}var d=a.target.dataset.posx,e=a.target.dataset.posy;console.log(a);var f=c(a);f="toggle",b.setCell(d,e,f)}}]).factory("BoardFactory",function(){function a(a,b,c){var d=a+"-"+b,f={x:a,y:b,state:c};e[d]=f}function b(){c&&console.log("board already initialized, resetting...");for(var a=0;a<h.x;a++)for(var b=0;b<h.y;b++)d.setCell(a,b,!1);c=!0}var c=!1,d={},e={},f={},g={},h={x:20,y:20},i={x:0,y:0},j=!1,k=0;return d.setCell=function(b,c,f){if("toggle"===f){var g=d.getCell(b,c);!1===g.state||"fruit"===g.state?f=!0:!0===g.state&&(f=!1);var h=b+"-"+c,i={x:b,y:c,state:f};e[h]=i}a(b,c,f)},d.buildBoard=function(){b()},d.getBoard=function(){return c?console.log("board already initialized, returning..."):b(),e},d.getCell=function(a,b){var c=a+"-"+b;return e[c]},d.moveForward=function(){var a=d.getCell(g.x,g.y);"fruit"===a.state&&(d.addToScore(100),d.removeFruitFromBoard()),d.setCell(g.x,g.y,"toggle"),d.setCell(f.x,f.y,"toggle"),f.x=g.x,f.y=g.y},d.move=function(a,b){var c=b.x,d=b.y;40===a?(c=b.x+1,d=b.y):39===a?(d=b.y+1,c=b.x):38===a?(c=b.x-1,d=b.y):37===a&&(d=b.y-1,c=b.x),f=b,g={x:c,y:d}},d.getCells=function(){return e},d.setCells=function(a){e=a},d.getBoardSize=function(){return h},d.addFruitLocation=function(a,b){i={x:a,y:b},d.setCell(a,b,"fruit"),j=!0},d.isFruitOnBoard=function(){return j},d.removeFruitFromBoard=function(){console.log("remove"),i={x:0,y:0},j=!1},d.addToScore=function(a){k+=a},d.toScore=function(){return k},d}),angular.module("snakeGameApp").controller("MainCtrl",["$scope","BoardFactory","PlayerFactory",function(a,b,c){function d(){console.log("Starting Game!"),b.buildBoard();var a={x:10,y:10};b.setCell(a.x,a.y,"toggle"),c.setPos(a);var d={LEFT:37,UP:38,RIGHT:39,DOWN:40};window.addEventListener("keydown",function(a){a.preventDefault(),console.log(a.keyCode),a.keyCode===d.LEFT?(e=d.LEFT,c.setPlayerMoved(!0)):a.keyCode===d.UP?(e=d.UP,c.setPlayerMoved(!0)):a.keyCode===d.RIGHT?(e=d.RIGHT,c.setPlayerMoved(!0)):a.keyCode===d.DOWN&&(e=d.DOWN,c.setPlayerMoved(!0))})}a.gameScore=function(){return c.getScore()};var e="";a.startGame=function(){var f;e="",c.setScore(0),d(),c.setPlayerMoved(!1);var g=!1,h=!1,i=0;clearInterval(f),f=setInterval(function(){if(!1===g)g=c.hasPlayerMoved();else{if(a.$apply(),10===i){var d=c.getPos();37===e?d.y-1<0&&(clearInterval(f),a.gameOver()):38===e?d.x-1<0&&(clearInterval(f),a.gameOver()):39===e?d.y+1>19&&(clearInterval(f),a.gameOver()):40===e&&d.x+1>19&&(clearInterval(f),a.gameOver());var j=b.toScore();j>0&&b.addToScore(-Math.abs(j)),c.setScore(c.getScore()+1+j),b.move(e,d),b.moveForward(),i=0,!1===h&&a.addFruit(),h=b.isFruitOnBoard()}i++}},10)},a.addFruit=function(){var a=b.getBoardSize();Math.floor(20*Math.random());var c=Math.floor(Math.random()*a.x),d=Math.floor(Math.random()*a.y);console.log("x: "+c+", y: "+d),b.addFruitLocation(c,d)},a.gameOver=function(){var a;a("gameOver")}}]),angular.module("snakeGameApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("snakeGameApp").controller("ContactCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("snakeGameApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/contact.html","<p>This is the contact view.</p>"),a.put("views/main.html",'<div ng-controller="MainCtrl" class="jumbotron"> <!-- p class="lead">\n    <img src="images/yeoman.8cb970fb.png" alt="I\'m Yeoman"><br>\n    Always a pleasure scaffolding your apps.\n</p --> <div ng-controller="BoardCtrl" id="wrap"> <div id="board"> <div ng-repeat="cell in board track by $index" ng-click="handleClick($event)" class="board-cell" id="cell_{{ cell.x }}-{{ cell.y }}" data-posx="{{ cell.x }}" data-posy="{{ cell.y }}" data-state="{{ cell.state }}"> </div> <div class="clearfix"></div> <div id="bar"> <div class="row"> <div class="col-sm-6 text-left"> <span><i class="fa fa-user"></i> Player: {{ player }}</span> </div> <div class="col-sm-6 text-left"> <span>Score: {{ gameScore() }}</span> </div> </div> </div> </div> </div> <p style="margin-top:50px"><a class="btn btn-lg btn-success" ng-click="startGame()">Start! <span class="glyphicon glyphicon-ok"></span></a></p> </div>')}]);